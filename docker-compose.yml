version: '3.7'

services:
    minio:
        restart: always
        image: minio/minio
        container_name: mlflow_minio
        ports:
            - "${MINIO_PORT}:${MINIO_PORT}"
            - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
        command: server /data --console-address ":${MINIO_CONSOLE_PORT}" --address ":${MINIO_PORT}"
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_volume:/data

    minio_healthcheck:
        image: curlimages/curl
        container_name: mlflow_minio_healthcheck
        depends_on:
            - minio
        command: ["sh", "-c", "while ! curl -f http://minio:${MINIO_PORT}/minio/health/live; do sleep 10; done && exit 0"]

    mc:
        image: minio/mc
        container_name: mlflow_mc
        depends_on:
            minio_healthcheck:
                condition: service_completed_successfully
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        entrypoint: >
            /bin/sh -c "/usr/bin/mc alias set minio http://minio:${MINIO_PORT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} && /usr/bin/mc mb minio/mlflow; exit 0;"

    db:
        restart: always
        image: mysql/mysql-server
        container_name: mlflow_db
        expose:
            - ${MYSQL_TCP_PORT}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_RANDOM_ROOT_PASSWORD=1
            - MYSQL_TCP_PORT=${MYSQL_TCP_PORT}
        volumes:
            - db_volume:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
            timeout: 15s
            retries: 10

    ofelia:
        restart: always
        image: mcuadros/ofelia:latest
        depends_on:
            - server
        container_name: mlflow_ofelia
        command: daemon --docker
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro

    server:
        restart: always
        build: .
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            mc:
                condition: service_started
            db:
                condition: service_healthy
        ports:
            - "${MLFLOW_SERVER_PORT}:5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:${MINIO_PORT}
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_TCP_PORT}/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/
        labels:
            ofelia.enabled: "true"
            ofelia.job-exec.datecron.schedule: "@every 6h"
            ofelia.job-exec.datecron.command: "mlflow gc --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_TCP_PORT}/${MYSQL_DATABASE}"

volumes:
    db_volume:
    minio_volume:
